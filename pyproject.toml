# pyproject.toml
[build-system]
requires = [
    "setuptools",
    "wheel",
    "jcchelpers @ git+https://github.com/GorgiAstro/jcchelpers",
    "install-jdk"
]
build-backend = "setuptools.build_meta"

[project]
name = "jcc"
authors = [
    {name = "Andi Vajda", email = "vajda@apache.org"}
]
description = "a C++ code generator for calling Java from C++/Python"
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
    'Programming Language :: C++',
    'Programming Language :: Java',
    'Programming Language :: Python',
    'Programming Language :: Python :: 2',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: Implementation :: CPython',
    'Topic :: Software Development :: Code Generators',
    'Topic :: Software Development :: Libraries :: Java Libraries'
]
version = "3.13"
dependencies = [
]

[tool.setuptools]
# ...
# By default, include-package-data is true in pyproject.toml, so you do
# NOT have to specify this line.
include-package-data = true

[tool.setuptools.package-data]
"*" = ["CHANGES", "DESCRIPTION", "INSTALL", "LICENSE", "NOTICE"]
jcc2 = ["*.h"]
jcc3 = ["*.h"]
_jcc2 = ["*.h"]
_jcc3 = ["*.h"]
java = ["*.java"]
"jcc2.patches" = ["patch.*"]
"jcc3.patches" = ["patch.*"]

[tool.setuptools.exclude-package-data]
jcc2 = ["config.py"]
jcc3 = ["config.py"]